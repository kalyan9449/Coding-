/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteMiddle(ListNode* head) 
    {
        if(head->next==nullptr)
            return nullptr;
        ListNode *slowptr=head,*fastptr=head;
        while((fastptr->next!=nullptr) && (fastptr!=nullptr))
        {
            if(fastptr->next->next!=nullptr)
                fastptr = fastptr->next->next;
            else
                fastptr = fastptr->next;
            if((fastptr->next!=nullptr) && (fastptr!=nullptr))
                slowptr=slowptr->next;
            else
                break;
        }
        slowptr->next = slowptr->next->next;
        return head;
        
    }
};
