class Solution {
public:
    int garbageCollection(vector<string>& garbage, vector<int>& travel) 
    {
         vector<int>prefix(travel.size());
        prefix[0] = travel[0];
        
        for(int i=1;i<prefix.size();i++)
        {
            prefix[i] = prefix[i-1] + travel[i];
        }
        
        int ans = 0;
        int g = 0;
        int m = 0;
        int p = 0;
        for(int i=0;i<garbage.size();i++)
        {
            string current = garbage[i]; 
            for(int j = 0;j<garbage[i].size();j++)
            {
                if(garbage[i][j] =='M')m = i; 
                if(garbage[i][j] == 'P')p = i; 
                if(garbage[i][j] =='G')g = i;
            }
            ans+= garbage[i].size(); //ans+= 7 
        }
        
        if(g>=1)ans+=prefix[g-1]; 
        if(p>=1)ans+=prefix[p-1]; 
        if(m>=1)ans+=prefix[m-1]; 
        return ans;
        
    }
};
